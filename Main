local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Debris = game:GetService("Debris")
local UserInputService = game:GetService("UserInputService")

local Client = Players.LocalPlayer
local PlayerGui = Client.PlayerGui
local Character = Client.Character
local HumanoidRootPart = Character.HumanoidRootPart
local Humanoid = Character:FindFirstChildOfClass("Humanoid")

function CheckGame()
	if game.PlaceId == 14783521048 then
		function Lobby()
			local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/zxciaz/VenyxUI/main/Reuploaded"))()
			local venyx = library.new("Deep Descent Lobby", 5013109572)

			-- first page
			local page = venyx:addPage("Games", 5012544693)
			local misc = venyx:addPage("Misc", 5012544693)

			local section1 = page:addSection("Main")
			local section2 = misc:addSection("Misc")
			local section3 = page:addSection("Destroy GUI")

			local Difficulty = nil
			section1:addDropdown("Difficulty Selection", {"Normal", "Hard", "Nightmare"}, function(Selection)
				Difficulty = Selection
			end)

			local PlayAgain = true
			section1:addToggle("Play Again", true, function(Selection)
				PlayAgain = Selection
			end)

			section1:addButton("Play Game", function()
				local TeleportData = {
					["PlayerNumber"] = tonumber(1),
					["Difficulty"] = tostring(Difficulty),
					["PlayAgain"] = PlayAgain
				}
				game:GetService("TeleportService"):Teleport(14783678740, Client, TeleportData)
			end)

			local players_table = {}

			for _, player in Players:GetPlayers() do
				local foundPlayer = table.find(players_table, player.Name)

				if foundPlayer then
					continue
				end

				table.insert(players_table, player.Name)
			end

			Players.PlayerAdded:Connect(function(player)
				table.insert(players_table, player.Name)
			end)

			Players.PlayerRemoving:Connect(function(player)
				local foundPlayer = table.find(players_table, player.Name)
				if foundPlayer then
					table.remove(players_table, foundPlayer)
				end
			end)

			local selected_player = nil
			section2:addDropdown("Select Player", players_table, function(playerSelected)
				selected_player = playerSelected
			end)

			section2:addToggle("Spectate Player", false, function(value)
				if value then
					local character = selected_player.Character
					if not character then
						return
					end

					local human = character:FindFirstChildOfClass("Humanoid")
					if not human then
						return
					end

					workspace.CurrentCamera.CameraSubject = human
				else
					workspace.CurrentCamera.CameraSubject = Humanoid
				end
			end)

			section2:addButton("Refresh Dropdown", function()
				section2:updateDropdown("Select Player", nil, players_table)
			end)

			section3:addKeybind("Toggle Keybind", Enum.KeyCode.RightAlt, function()
				venyx:toggle()
			end)

			section3:addButton("Destroy GUI", function()
				if CoreGui:FindFirstChild("Deep Descent Lobby") then
					CoreGui["Deep Descent Lobby"]:Destroy()
				end
			end)

			venyx:SelectPage(venyx.pages[1], true)
		end
		Lobby()
		return false
	end
	if game.PlaceId == 126067706237858 then
		Client:Kick("Returning you to the correct game! Please Wait...")
		task.delay(5, function()
			local TeleportData = {
				["PlayerNumber"] = 1,
				["Difficulty"] = "Normal",
				["PlayAgain"] = false
			}
			game:GetService("TeleportService"):Teleport(14783678740, Client, TeleportData)
		end)
		return false
	end
	if game.PlaceId ~= 14783678740 then
		Client:Kick("Wrong game!")
		return false;
	end
	return true
end

if not CheckGame() then return end
local InventoryFrame = PlayerGui.PlayerUIS.Inventory.Frame
local GeneratorUI = PlayerGui.PlayerUIS.UIS.Tasks.Generator
local RepEvents = ReplicatedStorage.RepEvents
local ToiletProxy = workspace.Important.Toilet:FindFirstChild("Proxy")
local PlayerUIS = PlayerGui.PlayerUIS
local Items = workspace.Items
local ItemsPickup = Items.ItemsPickup
local ZoneModule = require(ReplicatedStorage.Scripts.Modules.Zone)
local DrenchedPhantomFolder : Folder = workspace.Important.DrenchedPhantom

local Functions = ({});
local Utils = ({});
local Guides = ({});

for i,v in getgc(true) do
	if type(v) == "function" and getinfo(v).name == "GetRandomRotation" then
		Functions.GetRandomRotation = v
	end
end

function Utils:NewSound(soundId, volume, timePOS) -- Thank you game devs
	local Sound = Instance.new("Sound")
	Sound.SoundId = soundId
	Sound.Volume = volume
	Sound.TimePosition = timePOS or 0
	Sound.Parent = workspace.Sounds
	Sound:Play()
	Sound.Ended:Connect(function()
		Sound:Destroy()
	end)
	return Sound
end

local function Sub(TextLabel, Text) -- Thank you game devs
	for i = 1, #Text do
		TextLabel.Text = string.sub(Text, 1, i)
		Utils:NewSound("rbxassetid://9120299677", 0.5)
		task.wait(0.01)
	end
end

function Utils:Notify(message: string, color: "Red" | "Green") -- Thank you game devs
	if not message then return end
	if typeof(message) ~= "string" then return end
	if color and typeof(color) ~= "string" then return end
	if Delay and typeof(Delay) == "number" then return Delay else Delay = 4 end

	local NotifyLabel = ReplicatedStorage.Misc.GUIS.TextLabel:Clone()
	if color == "Red" then
		NotifyLabel.TextColor3 = Color3.fromRGB(255, 51, 54)
	elseif color == "Green" then
		NotifyLabel.TextColor3 = Color3.fromRGB(109, 255, 47)
	end
	NotifyLabel.Parent = PlayerUIS.Information.Notification.Frame
	Sub(NotifyLabel, message)
	TweenService:Create(NotifyLabel, TweenInfo.new(0.4, Enum.EasingStyle.Sine), {
		["TextTransparency"] = 0
	}):Play()
	task.wait(4)
	TweenService:Create(NotifyLabel, TweenInfo.new(0.4, Enum.EasingStyle.Sine), {
		["TextTransparency"] = 1
	}):Play()
	Debris:AddItem(NotifyLabel, 0.4)
end

function Functions:GetItemFrame(item: string) -- Thank you game devs
	if type(item) ~= "string" then
		return Utils:Notify(tostring(item).. " isn't a string!")
	end

	for _, v in InventoryFrame:GetChildren() do
		if v:IsA("Frame") and v:GetAttribute("Item") == item then
			return v
		end
	end
end

function Utils:DraggingEnabled(frame, parent) -- Credits to venyx source for this function
	parent = parent or frame

	-- stolen from wally or kiriot, kek
	local dragging = false
	local dragInput, mousePos, framePos

	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			mousePos = input.Position
			framePos = parent.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - mousePos
			parent.Position  = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
		end
	end)
end

function Functions:DrenchedFinally()
	if not getgenv().Drenched then return end
	
	local Drenched : Folder = DrenchedPhantomFolder.Drenched
	local Phantoms = Drenched:GetChildren()
	
	local Destroyed = false;
	local Task = nil

	for _, drenchedPhantom: Model in Phantoms do
		drenchedPhantom:GetAttributeChangedSignal("Stalking"):Connect(function()
			if drenchedPhantom:GetAttribute("Stalking") == true then
				if not getgenv().Drenched then return end

				RepEvents.Tools.FlashLight:FireServer() -- turn on the flashlight

				Task = task.spawn(function()
					while task.wait() do 
						if Destroyed == true then
							break;
						end;

						workspace.CurrentCamera.CFrame = CFrame.new(drenchedPhantom.PrimaryPart.Position, drenchedPhantom.PrimaryPart.Position - drenchedPhantom.PrimaryPart.CFrame.lookVector)
						DrenchedPhantomFolder.Event:FireServer("AddCount")
					end;
				end);
			else
				Destroyed = true;

				task.cancel(Task);

				RepEvents.Tools.FlashLight:FireServer() -- turn off the flashlight

				Utils:Notify("DrenchedPhantom Loop has successfully stopped!", "Green")
			end
		end)
	end
end

function Functions:UnEquip() -- Thank you game devs
	if InventoryFrame == nil then
		return Utils:Notify("Your Inventory Frame doesn't exist! Please rejoin!", "Red")
	end

	for _,v in InventoryFrame:GetChildren() do
		if v:GetAttribute("Equipped") and v:IsA("Frame") then
			v:SetAttribute("Equipped", false);
		end
	end
end

function Functions:Equip(tool: string) -- Thank you game devs
	if type(tool) ~= "string" then
		Utils:Notify(tostring(tool).. " isn't a string!", "Red")
	end

	if self:GetItemFrame(tool) then
		self:GetItemFrame(tool):SetAttribute("Equipped", true)
	else
		Utils:Notify("You don't have a ".. tool.. "!", "Red")
	end
end

function Utils:RandomString() -- thank you infinite yield
	local length = Random.new():NextInteger(10,20)
	local array = {};
	for i = 1, length do
		array[i] = string.char(math.random(32, 126))
	end
	return table.concat(array)
end

function Utils:GetDistance(v: BasePart)
	if Character then 
		local RootPart: BasePart = HumanoidRootPart
		if (RootPart) then 
			return (RootPart.Position - v.Position).Magnitude;
		end;
	end;
end;

function Functions:Window(DescendantAdded, window, char)
	if not getgenv().BrokenWindow then return end
	self:UnEquip()
	self:Equip("Welding Torch")

	if DescendantAdded and DescendantAdded.Parent then
		pcall(function()
			if (DescendantAdded.Parent.Proxy.Position - HumanoidRootPart.Position).Magnitude > 8 then
				Utils:Teleport(window)
				workspace.CurrentCamera.CFrame = char
			end
			task.wait(0.3)
			fireproximityprompt(DescendantAdded.Parent:FindFirstChild("Proxy"):FindFirstChild("ProximityPrompt"))
		end)
	end
end

function Guides:CreateGuideBeam(objectToBeam)
	local Attachment = Instance.new("Attachment")
	Attachment.Parent = Client.Character.PrimaryPart or Client.CharacterAdded:Wait().PrimaryPart
	local Attachment2 = Instance.new("Attachment")
	Attachment2.Parent = objectToBeam
	local Beam = Instance.new("Beam")
	Beam.Attachment0 = v16
	Beam.Attachment1 = v15
	Beam.Texture = "rbxassetid://14403995847"
	Beam.FaceCamera = true
	Beam.TextureMode = Enum.TextureMode.Static
	Beam.Width0 = 1
	Beam.Width1 = 1
	Beam.TextureSpeed = -3
	Beam.TextureLength = 1
	Beam.LightEmission = 1
	Beam.LightInfluence = 1
	Beam.Parent = objectToBeam
	return Attachment, Attachment2, Beam
end
function Guides:CreateGuideHighlight(objectToHighlight)
	local highlight = Instance.new("Highlight")
	highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
	highlight.Parent = objectToHighlight
	local tween = TweenService:Create(highlight, TweenInfo.new(1, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut, 5000, true, 0), {
		["FillTransparency"] = 1,
		["OutlineTransparency"] = 1
	})
	tween:Play()
	return highlight, tween, tween.Completed:Connect(function() --[[Anonymous function at line 60]]
		--[[
		Upvalues:
			[1] = u19
			[2] = u21
		--]]
		if objectToHighlight:IsDescendantOf(workspace) then
			tween:Play()
		end
	end)
end

function Utils:Teleport(Location) 
	Character:PivotTo(Location)
end

if CoreGui:FindFirstChild("Deep Descent") then
	CoreGui["Deep Descent"]:Destroy()
end

if CoreGui:FindFirstChild("DeepDescentInformationGUI") then
	CoreGui["DeepDescentInformationGUI"]:Destroy()
end

if CoreGui:FindFirstChild("ChosenGameUI") then
	CoreGui["ChosenGameUI"]:Destroy()
end

if CoreGui:FindFirstChild("Deep Descent Lobby") then
	CoreGui["Deep Descent Lobby"]:Destroy()
end

if CoreGui:FindFirstChild("Jailbreak 2020") then
	CoreGui["Jailbreak 2020"]:Destroy()
end

local funcs = {
	["CreateUI"] = function(name)
		local strings = {
			"Loading...",
			"Loaded!",
			"Chosen game: ".. name
		}

		local screengui = Instance.new("ScreenGui", CoreGui)
		local frame = Instance.new("ImageLabel", screengui)
		local text = Instance.new("TextLabel", frame)
		local icon = Instance.new("ImageLabel", frame)
		-- local skip = Instance.new("TextButton", screengui)

		-- skip.Position = UDim2.new(0.5, 0, 0.6, 0)
		-- skip.Size = UDim2.new(0.1, 0, 0.05, 0)
		-- skip.AnchorPoint = Vector2.new(0.6, 0.6)
		-- skip.BackgroundColor3 = Color3.fromRGB(25, 39, 49)
		-- skip.Text = "Skip"
		-- skip.TextColor3 = Color3.fromRGB(73, 103, 126)
		-- skip.TextSize = 20

		screengui.Name = Utils:RandomString()

		frame.Size = UDim2.new(0,0,0,0)
		frame.Position = UDim2.new(0.5,0,0.75,0)
		frame.Image = "rbxassetid://3570695787"
		frame.ImageColor3 = Color3.fromRGB(25,25,25)
		frame.BackgroundTransparency = 1
		frame.SliceCenter = Rect.new(100,100,100,100)
		frame.ScaleType = Enum.ScaleType.Slice
		frame.SliceScale = 0.12

		text.Font = Enum.Font.SourceSansBold
		text.TextColor3 = Color3.fromRGB(255,255,255)
		text.TextSize = 20
		text.Text = ""
		text.TextWrapped = true
		text.Size = UDim2.new(1,0,1,0)
		text.Position = UDim2.new(0,0,0,0)
		text.BackgroundTransparency = 1

		-- skip.MouseButton1Click:Connect(function()
		-- 	task.wait(1)
		-- 	screengui:Destroy()

		--     LoadUI()

		--     return
		-- end)

		frame:TweenSize(UDim2.new(0,250,0,70))
		frame:TweenPosition(UDim2.new(0.5,-125,0.6,-35)) -- 0.6
		task.wait(1)
		for i,v in pairs(strings) do
			for i2 = 1, #strings[i] do
				text.Text = string.sub(strings[i], 0, i2)
				task.wait(0.05)
			end
			task.wait(2)
			for i2 = 1, #strings[i] do
				text.Text = string.sub(strings[i], 0, #strings[i] - i2)
				task.wait(0.05)
			end
			if i ~= #strings then
				task.wait(0.5)
			end
		end
		icon.Visible = false
		frame:TweenSize(UDim2.new(0,0,0,0))
		frame:TweenPosition(UDim2.new(0.5,0,0.75,0))
		task.wait(1)
		screengui:Destroy()
	end
}

function Functions:LoadUI()
	-- This ui is meant for 1080p moniters.
	local ScreenGui = Instance.new("ScreenGui");
	local Frame = Instance.new("Frame");
	local Title = Instance.new("TextLabel");
	local Engine = Instance.new("Frame");
	local EngineTextLabel = Instance.new("TextLabel");
	local UIListLayout = Instance.new("UIListLayout");
	local UICorner = Instance.new("UICorner");
	local Toilet = Instance.new("Frame");
	local ToiletTextLabel = Instance.new("TextLabel");	
	local Valves = Instance.new("Frame");
	local ValvesTextLabel = Instance.new("TextLabel");
	local Larry = Instance.new("Frame");
	local LarryTextLabel = Instance.new("TextLabel");
	local ExtraLarryInformation = Instance.new("TextButton");
	local UICorner1 = Instance.new("UICorner")
	local ExtraLarryFrame = Instance.new("Frame")
	local TextLabel = Instance.new("TextLabel")
	local UICorner2 = Instance.new("UICorner")
	local Extra = Instance.new("Frame");
	local ExtraTextLabel = Instance.new("TextLabel")

	local ToiletLabel = PlayerGui.PlayerUIS.Important.Minigames.Larry.Frame.ImageLabel.Frame.TextLabel
	local EngineLabel = workspace.Important["Engine Room"].EngineWatcher.SurfaceGui.TextLabel
	local LarryLabel = workspace.Important.MonsterFolder.NormaMonster.Monster

	local Valve = {}

	local LarryChange = "Studs: DISTANCE"

	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	ScreenGui.Parent = CoreGui


	ScreenGui.Name = "DeepDescentInformationGUI"

	Frame.BackgroundColor3 = Color3.fromRGB(25.000002309679985, 39.00000147521496, 49.000004678964615)
	Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame.BorderSizePixel = 0
	Frame.Position = UDim2.new(0.004723067, 0, 0.31982545, 0)
	Frame.Size = UDim2.new(0.200000003, 0, 0.600000024, 0)
	Frame.Parent = ScreenGui

	Utils:DraggingEnabled(Frame)

	Title.Font = Enum.Font.AmaticSC
	Title.Text = "Information"
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextScaled = true
	Title.TextSize = 14
	Title.TextWrapped = true
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1
	Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Title.BorderSizePixel = 0
	Title.Position = UDim2.new(-1.59443971e-07, 0, 0, 0)
	Title.Size = UDim2.new(1.00000012, 0, 0.106778458, 0)
	Title.Name = "Title"
	Title.Parent = Frame

	Engine.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Engine.BackgroundTransparency = 1
	Engine.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Engine.BorderSizePixel = 0
	Engine.Position = UDim2.new(0, 0, 0.116778441, 0)
	Engine.Size = UDim2.new(0, 383, 0, 80)
	Engine.Name = "Engine"
	Engine.Parent = Frame

	EngineTextLabel.Font = Enum.Font.AmaticSC
	EngineTextLabel.Text = "Engine %: ".. EngineLabel.Text
	EngineTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	EngineTextLabel.TextScaled = true
	EngineTextLabel.TextSize = 14
	EngineTextLabel.TextWrapped = true
	EngineTextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	EngineTextLabel.BackgroundTransparency = 1
	EngineTextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	EngineTextLabel.BorderSizePixel = 0
	EngineTextLabel.Position = UDim2.new(0, 0, 4.12399714e-07, 0)
	EngineTextLabel.Size = UDim2.new(1, 0, 1, 0)
	EngineTextLabel.Name = "EngineTextLabel"
	EngineTextLabel.Parent = Engine
	EngineLabel.Changed:Connect(function(value)
		EngineTextLabel.Text = "Engine %: ".. EngineLabel.Text
	end)

	UIListLayout.Padding = UDim.new(0.04, 0)
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Parent = Frame

	UICorner.CornerRadius = UDim.new(0.0500000007, 0)
	UICorner.Parent = Frame

	Toilet.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Toilet.BackgroundTransparency = 1
	Toilet.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Toilet.BorderSizePixel = 0
	Toilet.Position = UDim2.new(0, 0, 0.116778441, 0)
	Toilet.Size = UDim2.new(0, 383, 0, 80)
	Toilet.Name = "Toilet"
	Toilet.Parent = Frame

	ToiletTextLabel.Font = Enum.Font.AmaticSC
	ToiletTextLabel.Text = "Toilet %: ".. ToiletLabel.Text
	ToiletTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	ToiletTextLabel.TextScaled = true
	ToiletTextLabel.TextSize = 14
	ToiletTextLabel.TextWrapped = true
	ToiletTextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ToiletTextLabel.BackgroundTransparency = 1
	ToiletTextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ToiletTextLabel.BorderSizePixel = 0
	ToiletTextLabel.Position = UDim2.new(0, 0, 4.12399714e-07, 0)
	ToiletTextLabel.Size = UDim2.new(1, 0, 1, 0)
	ToiletTextLabel.Name = "ToiletTextLabel"
	ToiletTextLabel.Parent = Toilet
	ToiletLabel.Changed:Connect(function(value)
		ToiletTextLabel.Text = "Toilet %: ".. ToiletLabel.Text
	end)

	Valves.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Valves.BackgroundTransparency = 1
	Valves.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Valves.BorderSizePixel = 0
	Valves.Position = UDim2.new(0, 0, 0.116778441, 0)
	Valves.Size = UDim2.new(0, 383, 0, 80)
	Valves.Name = "Valves"
	Valves.Parent = Frame

	ValvesTextLabel.Font = Enum.Font.AmaticSC
	ValvesTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	ValvesTextLabel.TextScaled = true
	ValvesTextLabel.TextSize = 14
	ValvesTextLabel.TextWrapped = true
	ValvesTextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ValvesTextLabel.BackgroundTransparency = 1
	ValvesTextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ValvesTextLabel.BorderSizePixel = 0
	ValvesTextLabel.Position = UDim2.new(0, 0, 4.12399714e-07, 0)
	ValvesTextLabel.Size = UDim2.new(1, 0, 1, 0)
	ValvesTextLabel.Name = "ValvesTextLabel"
	ValvesTextLabel.Parent = Valves

	for _, v in workspace.Important.Valves:GetChildren() do
		if v:GetAttribute("Puressurised") then
			table.insert(Valve, v)
			ValvesTextLabel.Text = "# of Valves Puressurised: ".. #Valve
			if #Valve == 2 then
				ValvesTextLabel.TextColor3 = Color3.fromRGB(255, 51, 54)
			end

			if #Valve == 3 then
				Utils:Notify("You need to do the valves now!!", "Red")
			end
		end
		v:GetAttributeChangedSignal("Puressurised"):Connect(function()
			if v:GetAttribute("Puressurised") then
				table.insert(Valve, v)
				ValvesTextLabel.Text = "# of Valves Puressurised: ".. #Valve

				if #Valve == 2 then
					ValvesTextLabel.TextColor3 = Color3.fromRGB(255, 51, 54)
				end

				if #Valve == 3 then
					Utils:Notify("You need to do the valves now!!", "Red")
				end
			else
				local foundLoop = table.find(Valve, v)
				if foundLoop then
					table.remove(Valve, foundLoop)
				end
				ValvesTextLabel.Text = "# of Valves Puressurised: ".. #Valve

				if #Valve == 1 then
					ValvesTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
				end
			end
		end)

		ValvesTextLabel.Text = "# of Valves Puressurised: 0"
	end

	Larry.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Larry.BackgroundTransparency = 1
	Larry.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Larry.BorderSizePixel = 0
	Larry.Position = UDim2.new(0, 0, 0.116778441, 0)
	Larry.Size = UDim2.new(0, 383, 0, 80)
	Larry.Name = "Larry"
	Larry.Parent = Frame

	LarryTextLabel.Font = Enum.Font.AmaticSC
	LarryTextLabel.Text = "Larry: Safe!"
	LarryTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	LarryTextLabel.TextScaled = true
	LarryTextLabel.TextSize = 14
	LarryTextLabel.TextWrapped = true
	LarryTextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	LarryTextLabel.BackgroundTransparency = 1
	LarryTextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	LarryTextLabel.BorderSizePixel = 0
	LarryTextLabel.Position = UDim2.new(0, 0, 4.12399714e-07, 0)
	LarryTextLabel.Size = UDim2.new(1, 0, 1, 0)
	LarryTextLabel.Name = "LarryTextLabel"
	LarryTextLabel.Parent = Larry

	ExtraLarryInformation.Font = Enum.Font.AmaticSC
	ExtraLarryInformation.Text = "+"
	ExtraLarryInformation.TextColor3 = Color3.fromRGB(255, 255, 255)
	ExtraLarryInformation.TextScaled = true
	ExtraLarryInformation.TextSize = 1
	ExtraLarryInformation.TextWrapped = true
	ExtraLarryInformation.AnchorPoint = Vector2.new(0, 0.5)
	ExtraLarryInformation.BackgroundColor3 = Color3.fromRGB(30.00000201165676, 46.000001057982445, 58.00000414252281)
	ExtraLarryInformation.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ExtraLarryInformation.BorderSizePixel = 0
	ExtraLarryInformation.Position = UDim2.new(0.873000026, 0, -0.1, 0)
	ExtraLarryInformation.Size = UDim2.new(0.106501281, 0, 0.5, 0)
	ExtraLarryInformation.Name = "ExtraLarryInformation"
	ExtraLarryInformation.Parent = Larry
	ExtraLarryInformation.MouseButton1Click:Connect(function()
		ExtraLarryFrame.Visible = not ExtraLarryFrame.Visible
	end)

	function Utils:LarryInfomration(larry: Model)
		local Destroyed = false;

		local Task = task.spawn(function()
			while task.wait() do 
				if Destroyed == true then
					break;
				end;

				local Distance = Utils:GetDistance(larry.HumanoidRootPart);

				-- print(Distance)

				TextLabel.Text = LarryChange:gsub("DISTANCE", math.floor(Distance))
			end;
		end);

		larry:GetAttributeChangedSignal("Room"):Connect(function()
			if larry:GetAttribute("Room") == "" then -- means hes gone
				Destroyed = true;

				task.cancel(Task);

				TextLabel.Text = LarryChange:gsub("DISTANCE", 0)
			end
		end)
	end;

	if LarryLabel:GetAttribute("Room") == "" then
		LarryTextLabel.Text = "Larry: Safe!"
		LarryTextLabel.TextColor3 = Color3.fromRGB(0,255,0)

		TextLabel.Text = LarryChange:gsub("DISTANCE", 0)
	else
		LarryTextLabel.Text = ("Larry: %s"):format(LarryLabel:GetAttribute("Room"))
		LarryTextLabel.TextColor3 = Color3.fromRGB(255,0,0)

		Utils:LarryInfomration(LarryLabel)
	end

	LarryLabel:GetAttributeChangedSignal("Room"):Connect(function()
		if LarryLabel:GetAttribute("Room") == "" then
			LarryTextLabel.Text = "Larry: Safe!"
			LarryTextLabel.TextColor3 = Color3.fromRGB(0,255,0)
		else
			LarryTextLabel.Text = ("Larry: %s"):format(LarryLabel:GetAttribute("Room"))
			LarryTextLabel.TextColor3 = Color3.fromRGB(255,0,0)

			Utils:LarryInfomration(LarryLabel)
		end
	end)

	-- if LarryLabel:GetAttribute("Room") ~= "" then
	-- 	wasRunningFirst = true;

	-- 	humancheck = task.spawn(function()
	-- 		while task.wait() do 
	-- 			if Visible == false then
	-- 				break;
	-- 			end;

	-- 			local Distance = (HumanoidRootPart.Position - LarryLabel.HumanoidRootPart.Position).Magnitude

	-- 			TextLabel.Text = LarryChange:gsub("DISTANCE", math.floor(Distance))
	-- 		end;
	-- 	end);
	-- else
	-- 	if wasRunningFirst then
	-- 		Visible = false;
	-- 	end

	-- LarryTextLabel.Text = "Larry: Safe!"
	-- LarryTextLabel.TextColor3 = Color3.fromRGB(0,255,0)

	-- 	TextLabel.Text = LarryChange:gsub("DISTANCE", 0)

	-- 	if wasRunningFirst then
	-- 		task.cancel(humancheck)
	-- 	end

	-- 	wasRunningFirst = false
	-- end
	-- LarryLabel:GetAttributeChangedSignal("Room"):Connect(function()
	-- 	if LarryLabel:GetAttribute("Room") ~= "" then
	-- 		wasRunningFirst = true;

	-- LarryTextLabel.Text = ("Larry: %s"):format(LarryLabel:GetAttribute("Room"))
	-- LarryTextLabel.TextColor3 = Color3.fromRGB(255,0,0)

	-- 		humancheck = task.spawn(function()
	-- 			while task.wait() do 
	-- 				if Visible == false then
	-- 					break;
	-- 				end;

	-- 				local Distance = (HumanoidRootPart.Position - LarryLabel.HumanoidRootPart.Position).Magnitude

	-- 				TextLabel.Text = LarryChange:gsub("DISTANCE", math.floor(Distance))
	-- 			end;
	-- 		end);
	-- 	else
	-- 		if wasRunningFirst then
	-- 			Visible = false;
	-- 		end

	-- 		LarryTextLabel.Text = "Larry: Safe!"
	-- 		LarryTextLabel.TextColor3 = Color3.fromRGB(0,255,0)

	-- 		TextLabel.Text = LarryChange:gsub("DISTANCE", 0)

	-- 		if wasRunningFirst then
	-- 			task.cancel(humancheck)
	-- 		end

	-- 		wasRunningFirst = false
	-- 	end
	-- end)

	UICorner1.CornerRadius = UDim.new(0.200000003, 0)
	UICorner1.Parent = ExtraLarryInformation

	ExtraLarryFrame.BackgroundColor3 = Color3.fromRGB(25.000002309679985, 39.00000147521496, 49.000004678964615)
	ExtraLarryFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ExtraLarryFrame.BorderSizePixel = 0
	ExtraLarryFrame.Position = UDim2.new(1.01566565, 0, -0.5, 0)
	ExtraLarryFrame.Size = UDim2.new(0.5, 0, 0.800000012, 0)
	ExtraLarryFrame.Name = "ExtraLarryFrame"
	ExtraLarryFrame.Parent = Larry
	ExtraLarryFrame.Visible = false;

	TextLabel.Font = Enum.Font.AmaticSC
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14
	TextLabel.TextWrapped = true
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Size = UDim2.new(0, 191, 0, 64)
	TextLabel.Parent = ExtraLarryFrame

	UICorner2.CornerRadius = UDim.new(0.200000003, 0)
	UICorner2.Parent = ExtraLarryFrame

	Extra.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Extra.BackgroundTransparency = 1
	Extra.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Extra.BorderSizePixel = 0
	Extra.Position = UDim2.new(0, 0, 0.116778441, 0)
	Extra.Size = UDim2.new(0, 383, 0, 80)
	Extra.Name = "Extra"
	Extra.Parent = Frame

	ExtraTextLabel.Font = Enum.Font.AmaticSC
	ExtraTextLabel.Text = "Window: Safe!"
	ExtraTextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	ExtraTextLabel.TextScaled = true
	ExtraTextLabel.TextSize = 14
	ExtraTextLabel.TextWrapped = true
	ExtraTextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ExtraTextLabel.BackgroundTransparency = 1
	ExtraTextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ExtraTextLabel.BorderSizePixel = 0
	ExtraTextLabel.Position = UDim2.new(0, 0, 4.12399714e-07, 0)
	ExtraTextLabel.Size = UDim2.new(1, 0, 1, 0)
	ExtraTextLabel.Name = "ExtraTextLabel"
	ExtraTextLabel.Parent = Extra

	local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/zxciaz/VenyxUI/main/Reuploaded"))()
	local venyx = library.new("Deep Descent", 5013109572)

	-- first page
	local main = venyx:addPage("Main", 5012544693)
	local aura = venyx:addPage("Aura", 5012544693)
	local player = venyx:addPage("Player", 5012544693)
	local gameteleports = venyx:addPage("Game", 5012544693)
	local settings = venyx:addPage("Settings", 5012544693)

	local section1 = main:addSection("Main")
	local section2 = settings:addSection("Settings")
	local section3 = player:addSection("Character")
	local section4 = main:addSection("Teleports")
	local section5 = main:addSection("Implosion")
	local section6 = aura:addSection("Auras")
	local section7 = player:addSection("Guides")
	local section8 = gameteleports:addSection("Game Teleports")
	local section9 = gameteleports:addSection("Game Misc")

	section2:addKeybind("Toggle Keybind", Enum.KeyCode.RightAlt, function()
		venyx:toggle()
	end)

	section2:addToggle("Information", true, function(value)
		CoreGui:FindFirstChild("Labels20200").Enabled = value
	end)

	local Difficulty = nil
	section8:addDropdown("Difficulty Selection", {"Normal", "Hard", "Nightmare"}, function(Selection)
		Difficulty = Selection
	end)

	local PlayAgain = true
	section8:addToggle("Play Again", PlayAgain, function(Selection)
		PlayAgain = Selection
	end)

	section8:addButton("Play Game", function()
		local TeleportData = {
			["PlayerNumber"] = tonumber(1),
			["Difficulty"] = tostring(Difficulty),
			["PlayAgain"] = PlayAgain
		}
		game:GetService("TeleportService"):Teleport(14783678740, Client, TeleportData)
	end)

	section9:addButton("TP to lobby", function()
		game:GetService("TeleportService"):Teleport(14783521048, Client)
	end)

	section9:addButton("Play Again [gui]", function()
		RepEvents.Misc.ConsoleEvent:FireServer("PlayAgain")
	end)

	section1:addToggle("Auto Complete Broken Windows", false, function(value)
		getgenv().BrokenWindow = value

		if workspace.Important["Captain Button"].BillPart:FindFirstChildOfClass("BillboardGui") or workspace.CutSceneFolder.VoiceCutscene.Screen.Skip:FindFirstChildOfClass("ProximityPrompt") then
			Utils:Notify("Listen to Captain", "Red")
			section1:updateToggle("Auto Complete Broken Windows", "Listen to Captain!", false)
			task.delay(3, function()
				section1:updateToggle("Listen to Captain!", "Auto Complete Broken Windows", false)
			end)
			return
		end

		if not Functions:GetItemFrame("Welding Torch") then
			Utils:Notify("Can't fix broken windows due to you not having a welding torch!", "Red")
			section1:updateToggle("Auto Complete Broken Windows", "Grab a welding torch!", false)
			task.delay(3, function()
				section1:updateToggle("Grab a welding torch!", "Auto Complete Broken Windows", false)
			end)
			return
		end

		task.spawn(function()
			while true do
				if not BrokenWindow then return end
				for _,DescendantAdded in workspace.Window:GetDescendants() do
					if DescendantAdded.ClassName == "Highlight" and DescendantAdded.Parent and DescendantAdded.Parent:GetAttribute("Damaged") then
						if DescendantAdded.Parent.Name == "1" then
							local WindowPOS1 = CFrame.new(97.2842712, 6.74976015, -12.405777, 0.999651372, -1.09388543e-08, 0.0264029093, 1.15471526e-08, 1, -2.28866064e-08, -0.0264029093, 2.31835067e-08, 0.999651372);
							local CharacterLook1 = CFrame.new(97.2736969, 8.26943398, -12.8060255, 0.999651432, -0.0010389185, 0.0263824649, 1.16415308e-10, 0.999225736, 0.0393486321, -0.0264029112, -0.0393349156, 0.998877287)
							Functions:Window(DescendantAdded, WindowPOS1, CharacterLook1)
						elseif DescendantAdded.Parent.Name == "2" then
							local WindowPOS2 = CFrame.new(80.2612, 6.74976063, -12.8869047, 0.9999336, 8.11991896e-08, 0.011521928, -8.1834429e-08, 1, 5.46618857e-08, -0.011521928, -5.5601145e-08, 0.9999336)
							local CharacterLook2 = CFrame.new(80.2565918, 8.24155521, -13.2869453, 0.99993366, 0.00018908424, 0.0115203774, 1.45519152e-11, 0.999865413, -0.0164108165, -0.0115219289, 0.0164097287, 0.999799013)
							Functions:Window(DescendantAdded, WindowPOS2, CharacterLook2)
						elseif DescendantAdded.Parent.Name == "3" then
							local WindowPOS3 = CFrame.new(63.2663727, 6.74976015, -12.754281, 0.999863267, -3.24725247e-09, 0.0165347364, 2.98946601e-09, 1, 1.56153099e-08, -0.0165347364, -1.55637441e-08, 0.999863267)
							local CharacterLook3 = CFrame.new(63.259758, 8.24227905, -13.1542816, 0.999863386, 0.000247411605, 0.0165328868, 2.91038339e-11, 0.999888122, -0.0149631398, -0.0165347401, 0.0149610955, 0.999751329)
							Functions:Window(DescendantAdded, WindowPOS3, CharacterLook3)
						elseif DescendantAdded.Parent.Name == "4" then
							local WindowPOS4 = CFrame.new(-26.657177, 6.74976015, 9.7591753, -0.999514341, 1.4576643e-08, -0.0311624352, 1.53793351e-08, 1, -2.55186059e-08, 0.0311624352, -2.59854698e-08, -0.999514341)
							local CharacterLook4 = CFrame.new(-26.6447124, 8.25016117, 10.1589813, -0.999514341, 2.50231351e-05, -0.0311622769, 1.81898919e-12, 0.999999762, 0.000802994182, 0.0311622843, 0.000802604191, -0.999514103)
							Functions:Window(DescendantAdded, WindowPOS4, CharacterLook4)
						elseif DescendantAdded.Parent.Name == "5" then
							local WindowPOS5 = CFrame.new(-26.4756756, 6.74976015, -12.3558607, 0.999913573, -9.29916126e-08, 0.0131452596, 9.34653315e-08, 1, -3.54229641e-08, -0.0131452596, 3.66485295e-08, 0.999913573)
							local CharacterLook5 = CFrame.new(-26.4809361, 8.26148987, -12.7559643, 0.999913573, -0.000308393181, 0.0131416433, 8.23814954e-30, 0.999724805, 0.0234604087, -0.0131452605, -0.0234583803, 0.999638438)
							Functions:Window(DescendantAdded, WindowPOS5, CharacterLook5)
						elseif DescendantAdded.Parent.Name == "6" then
							local WindowPOS6 = CFrame.new(-69.9240417, 4.14758444, -11.1560564, 0.99946183, 6.53063736e-08, -0.0328032672, -6.56840271e-08, 1, -1.04351843e-08, 0.0328032672, 1.25842199e-08, 0.99946183)
							local CharacterLook6 = CFrame.new(-69.910553, 5.54273796, -11.5669518, 0.999461889, -0.00687861163, -0.0320739634, 0, 0.977767408, -0.209692881, 0.0328032672, 0.209580049, 0.977241158)
							Functions:Window(DescendantAdded, WindowPOS6, CharacterLook6)
						elseif DescendantAdded.Parent.Name == "7" then
							local WindowPOS7 = CFrame.new(-69.8751907, 4.14758444, 9.28525639, -0.999653339, -5.89732636e-08, -0.0263282117, -6.03718817e-08, 1, 5.23275148e-08, 0.0263282117, 5.38988587e-08, -0.999653339)
							local CharacterLook7 = CFrame.new(-69.8641968, 5.51640177, 9.70262718, -0.999653339, -0.00690760883, -0.0254058894, 1.45027649e-34, 0.964968681, -0.262365401, 0.0263282005, -0.262274444, -0.96463418)
							Functions:Window(DescendantAdded, WindowPOS7, CharacterLook7)
						end
					end
				end
				task.wait()
			end
		end)
	end)

	section1:addToggle("Auto Turn Valves", false, function(value)
		getgenv().Valves = value
		task.spawn(function()
			while task.wait(0.2) do
				if not Valves then return end
				for _,val in workspace.Important.Valves:GetChildren() do
					if val:GetAttribute("Puressurised") then
						if not getgenv().Valves then return end

						if (Character:GetPivot().Position - val:FindFirstChild("Hitbox").Position).Magnitude > 8 then
							Utils:Teleport(val:FindFirstChild("Hitbox").CFrame + Vector3.new(-2,0,0))
						end
						fireproximityprompt(val:FindFirstChild("ProximityPrompt"))
					end
				end
			end
		end)
	end)

	section1:addToggle("Fuel Engine", false, function(value)
		getgenv().FuelEngineToggle = value

		if workspace.Important["Captain Button"].BillPart:FindFirstChildOfClass("BillboardGui") or workspace.CutSceneFolder.VoiceCutscene.Screen.Skip:FindFirstChildOfClass("ProximityPrompt") then
			Utils:Notify("Listen to Captain", "Red")
			section1:updateToggle("Fuel Engine", "Listen to Captain", false)
			task.delay(3, function()
				section1:updateToggle("Listen to Captain", "Fuel Engine", false)
			end)
			return
		end

		while task.wait() do
			if not FuelEngineToggle then return end
			-- pcall(function()
			-- print((HumanoidRootPart.Position - workspace.Important["Engine Room"].Proxy.Position).Magnitude)
			-- print((HumanoidRootPart.Position - workspace.Items.MiscItems.FuelCan.PrimaryPart.Position).Magnitude)
			-- if (HumanoidRootPart.Position - workspace.Items.MiscItems.FuelCan.PrimaryPart.Position).Magnitude <= 10 and (HumanoidRootPart.Position - workspace.Important["Engine Room"].Proxy.Position) <= 20 then
			-- 	fireproximityprompt(workspace.Items.MiscItems.FuelCan.Hand.ProximityPrompt, 1)
			-- 	task.wait()
			-- 	fireproximityprompt(workspace.Important["Engine Room"].Proxy.ProximityPrompt, 1)
			-- end
			-- end)
			-- if (HumanoidRootPart.Position)
			pcall(function()
				Utils:Teleport(CFrame.new(85.0673141, 6.74976063, -10.8900175, 0.560420454, 6.33494368e-09, -0.828208268, 2.24814158e-08, 1, 2.28613857e-08, 0.828208268, -3.14312807e-08, 0.560420454))
				workspace.CurrentCamera.CFrame = CFrame.new(85.5336914, 8.61743546, -11.2021685, 0.55614388, 0.611138821, -0.563217103, -1.49011612e-08, 0.677688122, 0.735349596, 0.831086099, -0.408960164, 0.37689203)
				task.wait(0.2)
				fireproximityprompt(workspace.Items.MiscItems.FuelCan.Hand.ProximityPrompt, 1)
				task.wait(0.2)
				Utils:Teleport(CFrame.new(74.6215057, 6.74976063, -8.29475307, -0.999999523, 5.25634825e-09, 0.000963071361, 5.26071542e-09, 1, 4.53204763e-09, -0.000963071361, 4.53711202e-09, -0.999999523))
				workspace.CurrentCamera.CFrame = CFrame.new(74.6211166, 8.28097343, -7.89377785, -0.999999523, -6.01272841e-05, 0.00096130406, -4.77073405e-13, 0.998049617, 0.0624256358, -0.000963182596, 0.062425606, -0.99804914)
				task.wait(0.2)
				fireproximityprompt(workspace.Important["Engine Room"].Proxy.ProximityPrompt, 1)
			end)
		end
	end)

	section1:addButton("Plunge toilet [tp back after]", function()
		if workspace.Important["Captain Button"].BillPart:FindFirstChildOfClass("BillboardGui") or workspace.CutSceneFolder.VoiceCutscene.Screen.Skip:FindFirstChildOfClass("ProximityPrompt") then
			Utils:Notify("Listen to Captain", "Red")
			section1:updateToggle("Plunge toilet [tp back after]", "Listen to Captain", false)
			task.delay(3, function()
				section1:updateToggle("Listen to Captain", "Plunge toilet [tp back after]", false)
			end)
			return
		end

		if not Functions:GetItemFrame("Plunger") then
			Utils:Notify("You need the Plunger!")
			return
		end

		local positon = HumanoidRootPart.CFrame
		Utils:Teleport(workspace.Important.Toilet.Proxy.CFrame + Vector3.new(-3,0,0))
		workspace.CurrentCamera.CFrame = CFrame.new(13.8907862, 8.48324203, 8.65739441, 0.00751077337, 0.466951728, -0.884250939, 4.40380774e-07, 0.884275913, 0.4669649, 0.999971807, -0.00350765698, 0.00664139027)
		task.wait(0.1)
		Functions:UnEquip()
		Functions:Equip("Plunger")
		task.wait(0.2)
		for i = 1,20 do
			fireproximityprompt(workspace.Important.Toilet:FindFirstChild("Proxy"):FindFirstChild("ProximityPrompt"))
		end
		Utils:Teleport(positon)
	end)

	section1:addButton("Plunge toilet", function()
		if workspace.Important["Captain Button"].BillPart:FindFirstChildOfClass("BillboardGui") or workspace.CutSceneFolder.VoiceCutscene.Screen.Skip:FindFirstChildOfClass("ProximityPrompt") then
			Utils:Notify("Listen to Captain", "Red")
			section1:updateToggle("Plunge toilet", "Listen to Captain", false)
			task.delay(3, function()
				section1:updateToggle("Listen to Captain", "Plunge toilet", false)
			end)
			return
		end

		if not Functions:GetItemFrame("Plunger") then
			Utils:Notify("You need the Plunger!")
			return
		end

		Utils:Teleport(workspace.Important.Toilet.Proxy.CFrame + Vector3.new(-3,0,0))
		workspace.CurrentCamera.CFrame = CFrame.new(13.8907862, 8.48324203, 8.65739441, 0.00751077337, 0.466951728, -0.884250939, 4.40380774e-07, 0.884275913, 0.4669649, 0.999971807, -0.00350765698, 0.00664139027)
		task.wait(0.1)
		Functions:UnEquip()
		Functions:Equip("Plunger")
		task.wait(0.2)
		for i = 1,20 do
			fireproximityprompt(workspace.Important.Toilet:FindFirstChild("Proxy"):FindFirstChild("ProximityPrompt"))
		end
	end)

	section1:addButton("Repair Generator", function()
		if not Functions:GetItemFrame("Wrench") then
			Utils:Notify("You need the wrench!")
			return
		end
		Utils:Teleport(CFrame.new(47.3873711, 6.7497611, 5.27386856, 0.0177220218, 6.62885355e-08, -0.999842942, 8.62713705e-08, 1, 6.78280898e-08, 0.999842942, -8.7459874e-08, 0.0177220218))
		workspace.CurrentCamera.CFrame = CFrame.new(47.9353485, 8.60492325, 5.26415586, 0.0177219473, 0.710211396, -0.703765452, -2.19586812e-32, 0.703876019, 0.710322917, 0.999843001, -0.0125883054, 0.0124740526)
		task.wait(0.1)
		Functions:UnEquip()
		Functions:Equip("Wrench")
		RepEvents.Tasks.TaskCompleted:FireServer("Generator")
		task.wait(0.2)
		fireproximityprompt(workspace.Important.Generator.Proxy.ProximityPrompt, 2)
		if GeneratorUI.Enabled then
			GeneratorUI.Enabled = false
		end
	end)

	section1:addToggle("Auto DrenchedPhantom", false, function(value)
		getgenv().Drenched = value

		Functions:DrenchedFinally()
	end)

	-- section1:addButton("Repair all cameras", function()
	-- 	RepEvents.Tasks.CameraRepaired:FireServer(workspace.Important.Cameras["1"])
	-- 	RepEvents.Tasks.CameraRepaired:FireServer(workspace.Important.Cameras["2"])
	-- 	RepEvents.Tasks.CameraRepaired:FireServer(workspace.Important.Cameras["3"])
	-- end)

	-- section1:addToggle("Auto Flash [beta]", false, function(value)
	-- 	getgenv().AutoFlash = value

	-- 	for _,DrenchedPhantom in pairs(workspace.Important.DrenchedPhantom.Drenched:GetChildren()) do
	-- 		DrenchedPhantom:GetAttributeChangedSignal("Stalking"):Connect(function()
	-- 			if DrenchedPhantom:GetAttribute("Stalking") == true then
	-- 				while DrenchedPhantom:GetAttribute("Stalking") == true do
	-- 					workspace.CurrentCamera.CFrame.LookVector = Functions.GetRandomRotation(Client)			
	-- 				end
	-- 			end
	-- 		end)
	-- 	end
	-- end)

	section7:addButton("Create Guide on Toilet", function()
		Guides:CreateGuideBeam(ToiletProxy)
		Guides:CreateGuideHighlight(ToiletProxy)
	end)

	section5:addButton("Godmode [only to fire]", function()
		task.spawn(function()
			for _,v in pairs(workspace.CutSceneFolder.EscapeCutscene.Important.BrokenImportant.FireParts:GetDescendants()) do
				if v.Name == "TouchInterest" then
					v:Destroy()
				end
			end
			Utils:Notify("You are now immune to burning!")
		end)
	end)

	section4:addButton("TP to front 1", function()
		Utils:Teleport(CFrame.new(-72.8690567, 4.14758539, -0.231762022))
		workspace.CurrentCamera.CFrame = CFrame.new(-72.4685822, 5.66939592, -0.233420029, 0.00413958216, 0.043620728, -0.99903965, -1.45519135e-11, 0.999048173, 0.0436211042, 0.999991417, -0.00018057313, 0.0041356422)
	end)

	section4:addButton("TP to front 2", function()
		Utils:Teleport(CFrame.new(-43.3928528, 6.74976015, -0.881102264, -0.0107454835, -8.72141914e-09, 0.999942243, 6.75919196e-08, 1, 9.44827239e-09, -0.999942243, 6.76895411e-08, -0.0107454835))
		workspace.CurrentCamera.CFrame = CFrame.new(-43.7923279, 8.27075863, -0.875718713, -0.0117743444, -0.0419912823, 0.999048591, 1.41483793e-32, 0.999117911, 0.0419941917, -0.999930739, 0.000494454056, -0.0117639573)
	end)

	section4:addButton("TP to toilet", function()
		Utils:Teleport(workspace.Important.Toilet.Proxy.CFrame + Vector3.new(-3,0,0))
		workspace.CurrentCamera.CFrame = CFrame.new(13.8907862, 8.48324203, 8.65739441, 0.00751077337, 0.466951728, -0.884250939, 4.40380774e-07, 0.884275913, 0.4669649, 0.999971807, -0.00350765698, 0.00664139027)
	end)

	section4:addButton("TP to back", function()
		Utils:Teleport(CFrame.new(94.7119293, 6.7497611, -9.54644775))
		workspace.CurrentCamera.CFrame = CFrame.new(94.3097916, 8.29419708, -9.54219341, -0.0104401959, -0.0888682231, 0.995988727, 1.16415322e-10, 0.996043026, 0.088873066, -0.999945521, 0.00092785235, -0.0103988834)
	end)

	section6:addToggle("Toilet Aura", false, function(value)
		getgenv().ToiletAura = value
		if not ToiletAura then 
			return
		end

		if not Functions:GetItemFrame("Plunger") then
			Utils:Notify("You need a Plunger")
			return
		end

		task.spawn(function()
			while task.wait() do
				if not ToiletAura then return end
				local Distance = (Character:GetPivot().Position - ToiletProxy.Position).Magnitude
				if Distance <= 8 then
					for i = 1,20 do
						fireproximityprompt(ToiletProxy:FindFirstChild("ProximityPrompt"))
					end
				end
			end
		end)
	end)

	section6:addToggle("Fuel Aura", false, function(value)
		getgenv().FuelAura = value
		if not FuelAura then 
			return
		end

		task.spawn(function()
			while task.wait() do
				if not FuelAura then return end
				pcall(function()
					local DistanceFromCan = (Character:GetPivot().Position - workspace.Items.MiscItems.FuelCan.Hitbox.Position).Magnitude
					local DistanceFromEngine = (Character:GetPivot().Position - workspace.Important["Engine Room"].EngineWatcher.Position).Magnitude
					if DistanceFromCan <= 10 then
						fireproximityprompt(workspace.Items.MiscItems.FuelCan.Hand.ProximityPrompt)
					end
					fireproximityprompt(workspace.Important["Engine Room"].Proxy.ProximityPrompt)
				end)
			end
		end)
	end)

	workspace:SetAttribute("PlayerWalkSpeedMultiplier", workspace:GetAttribute("PlayerWalkSpeedMultiplier"))
	Client.Sprint:SetAttribute("Sprinting", true)
	Client.Sprint:SetAttribute("Sprinting", false)
	section3:addSlider("Speed", workspace:GetAttribute("PlayerWalkSpeedMultiplier"), 1.5, 10, function(value)
		workspace:SetAttribute("PlayerWalkSpeedMultiplier", value)
		Client.Sprint:SetAttribute("Sprinting", true)
		Client.Sprint:SetAttribute("Sprinting", false)
	end)

	-- section1:addToggle("Toggle", nil, function(value)
	-- print("Toggled", value)
	-- end)
	-- section1:addButton("Button", function()
	-- print("Clicked")
	-- end)
	-- section1:addTextbox("Notification", "Default", function(value, focusLost)
	-- print("Input", value)

	-- if focusLost then
	-- venyx:Notify("Title", value)
	-- end
	-- end)
	--section2:addKeybind("Toggle Keybind", Enum.KeyCode.One, function()
	-- print("Activated Keybind")
	-- venyx:toggle()
	-- end, function()
	-- print("Changed Keybind")
	-- end)
	-- section2:addColorPicker("ColorPicker", Color3.fromRGB(50, 50, 50))
	-- section2:addColorPicker("ColorPicker2")
	-- section2:addSlider("Slider", 0, -100, 100, function(value)
	-- print("Dragged", value)
	-- end)
	-- section2:addDropdown("Dropdown", {"Hello", "World", "Hello World", "Word", 1, 2, 3})
	-- section2:addDropdown("Dropdown", {"Hello", "World", "Hello World", "Word", 1, 2, 3}, function(text)
	--    print("Selected", text)
	-- end)
	-- section2:addButton("Button")

	-- load
	-- venyx:SelectPage(venyx.pages[1], true)
end

local _, err = pcall(funcs.CreateUI, "Deep Descent")
if err then warn(err) return end

Functions:LoadUI()
